//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using FluentNHibernate.Mapping;
using Integration.NsiBase;
using SISHaU.DataAccess.Definition;

namespace Integration.NsiBaseDto
{


    /// <remarks/>
    public class nsiRefDto : EntityDto
    {
        
        public virtual string Code{get;set;}
        
        public virtual string GUID{get;set;}
        
        public virtual string Name{get;set;}
    }
    
    /// <remarks/>
    public class NsiListTypeDto : EntityDto
    {
        
        public virtual System.DateTime Created{get;set;}
        
        public virtual IList<NsiItemInfoTypeDto> NsiItemInfo{get;set;}
        
        public virtual ListGroup ListGroup{get;set;}
    }
    
    /// <remarks/>
    public class NsiItemInfoTypeDto : EntityDto
    {
        
        public virtual string RegistryNumber{get;set;}
        
        public virtual string Name{get;set;}
        
        public virtual System.DateTime Modified{get;set;}
    }
    
    /// <remarks/>
    public class NsiElementFieldTypeDto : EntityDto
    {
        
        public virtual string Name{get;set;}
    }
    
    /// <remarks/>
    //public class NsiElementAttachmentFieldTypeDto : NsiElementFieldTypeDto
    //{
        
    //    public virtual AttachmentTypeDto Document{get;set;}
    //}
    
    /// <remarks/>
    //public class NsiElementFiasAddressRefFieldTypeDto : NsiElementFieldTypeDto
    //{
        
    //    public virtual NsiElementFiasAddressRefFieldTypeNsiRefDto NsiRef{get;set;}
    //}
    
    /// <remarks/>
    //public class NsiElementFiasAddressRefFieldTypeNsiRefDto : EntityDto
    //{
        
    //    public virtual string Guid{get;set;}
        
    //    public virtual string aoGuid{get;set;}
    //}
    
    /// <remarks/>
    public class NsiElementOkeiRefFieldTypeDto : NsiElementFieldTypeDto
    {
        
        public virtual string Code{get;set;}
    }
    
    /// <remarks/>
    public class NsiElementNsiRefFieldTypeDto : NsiElementFieldTypeDto
    {
        
        public virtual NsiElementNsiRefFieldTypeNsiRefDto NsiRef{get;set;}
    }

    /// <remarks/>
    public class NsiElementNsiRefFieldTypeNsiRefDto : EntityDto
    {

        public virtual string NsiItemRegistryNumber { get; set; }

        public virtual nsiRefDto Ref { get; set; }
    }

    /// <remarks/>
    //public class NsiElementNsiFieldTypeDto : NsiElementFieldTypeDto
    //{

    //    public virtual NsiElementNsiFieldTypeNsiRefDto NsiRef{get;set;}
    //}

    /// <remarks/>
    //public class NsiElementNsiFieldTypeNsiRefDto : EntityDto
    //{

    //    public virtual string NsiItemRegistryNumber{get;set;}

    //    public virtual ListGroup ListGroup{get;set;}
    //}

    /// <remarks/>
    //public class NsiElementEnumFieldTypeDto : NsiElementFieldTypeDto
    //{

    //    public virtual IList<NsiElementEnumFieldTypePositionDto> Position{get;set;}
    //}

    /// <remarks/>
    //public class NsiElementEnumFieldTypePositionDto : EntityDto
    //{

    //    public virtual string GUID{get;set;}

    //    public virtual string Value{get;set;}
    //}

    /// <remarks/>
    public class NsiElementIntegerFieldTypeDto : NsiElementFieldTypeDto
    {

        public virtual string Value { get; set; }
    }

    /// <remarks/>
    public class NsiElementDateFieldTypeDto : NsiElementFieldTypeDto
    {
        
        public virtual System.DateTime Value{get;set;}
    }
    
    /// <remarks/>
    //public class NsiElementFloatFieldTypeDto : NsiElementFieldTypeDto
    //{
        
    //    public virtual float Value{get;set;}
    //}
    
    /// <remarks/>
    public class NsiElementBooleanFieldTypeDto : NsiElementFieldTypeDto
    {
        
        public virtual bool Value{get;set;}
    }
    
    /// <remarks/>
    public class NsiElementStringFieldTypeDto : NsiElementFieldTypeDto
    {
        
        public virtual string Value{get;set;}
    }
    
    /// <remarks/>
    public class NsiElementTypeDto : EntityDto
    {
        
        public virtual string Code{get;set;}
        
        public virtual string GUID{get;set;}
        
        public virtual System.DateTime EndDate{get;set;}
        
        public virtual System.DateTime Modified{get;set;}
        
        public virtual System.DateTime StartDate{get;set;}
        
        public virtual bool IsActual{get;set;}
        
        public virtual IList<NsiElementFieldTypeDto> NsiElementField{get;set;}

        /*public virtual IList<NsiElementStringFieldTypeDto> NsiElementStringField{get;set;}*/

        public virtual IList<NsiElementTypeDto> ChildElement{get;set;}
    }
    
    /// <remarks/>
    public class NsiItemTypeDto : EntityDto
    {
        
        public virtual string NsiItemRegistryNumber{get;set;}
        
        public virtual System.DateTime Created{get;set;}
        
        public virtual IList<NsiElementTypeDto> NsiElement{get;set;}
    }
    
    /// <remarks/>
    public class nsiRefDtoMap : MapAction<nsiRefDto>
    {
        
        public nsiRefDtoMap() : 
                base("NsiBase.nsiRef", id => id.Id)
        {
            Map(map => map.Code);
            Map(map => map.GUID);
            Map(map => map.Name);
        }
    }
    
    /// <remarks/>
    public class NsiListTypeDtoMap : MapAction<NsiListTypeDto>
    {
        
        public NsiListTypeDtoMap() : 
                base("NsiBase.NsiListType", id => id.Id)
        {
            Map(map => map.Created);
            SetThisColumnKey(HasMany(hm => hm.NsiItemInfo).Cascade.All());
            Map(map => map.ListGroup);
        }
    }
    
    /// <remarks/>
    public class NsiItemInfoTypeDtoMap : MapAction<NsiItemInfoTypeDto>
    {
        
        public NsiItemInfoTypeDtoMap() : 
                base("NsiBase.NsiItemInfoType", id => id.Id)
        {
            Map(map => map.RegistryNumber);
            Map(map => map.Name);
            Map(map => map.Modified);
        }
    }
    
    /// <remarks/>
    public class NsiElementFieldTypeDtoMap : MapAction<NsiElementFieldTypeDto>
    {
        
        public NsiElementFieldTypeDtoMap() : 
                base("NsiBase.NsiElementFieldType", id => id.Id)
        {
            Map(map => map.Name);
        }
    }
    
    /// <remarks/>
    //public class NsiElementAttachmentFieldTypeDtoMap : SubclassMap<NsiElementAttachmentFieldTypeDto>
    //{
        
    //    public NsiElementAttachmentFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementAttachmentFieldType");
    //        References(r => r.Document);
    //    }
    //}
    
    /// <remarks/>
    //public class NsiElementFiasAddressRefFieldTypeDtoMap : SubclassMap<NsiElementFiasAddressRefFieldTypeDto>
    //{
        
    //    public NsiElementFiasAddressRefFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementFiasAddressRefFieldType");
    //        References(r => r.NsiRef);
    //    }
    //}
    
    /// <remarks/>
    //public class NsiElementFiasAddressRefFieldTypeNsiRefDtoMap : MapAction<NsiElementFiasAddressRefFieldTypeNsiRefDto>
    //{
        
    //    public NsiElementFiasAddressRefFieldTypeNsiRefDtoMap() :
    //        base("NsiBase", "NsiElementFiasAddressRefFieldTypeNsiRef", id => id.Id)
    //    {
    //        Map(map => map.Guid);
    //        Map(map => map.aoGuid);
    //    }
    //}
    
    /// <remarks/>
    public class NsiElementOkeiRefFieldTypeDtoMap : SubclassMap<NsiElementOkeiRefFieldTypeDto>
    {
        
        public NsiElementOkeiRefFieldTypeDtoMap()
        {
            Table("NsiBase.NsiElementOkeiRefFieldType");
            Map(map => map.Code);
        }
    }
    
    /// <remarks/>
    public class NsiElementNsiRefFieldTypeDtoMap : SubclassMap<NsiElementNsiRefFieldTypeDto>
    {
        
        public NsiElementNsiRefFieldTypeDtoMap()
        {
            Table("NsiBase.NsiElementNsiRefFieldType");
            References(r => r.NsiRef).Cascade.SaveUpdate();
        }
    }
    
    /// <remarks/>
    public class NsiElementNsiRefFieldTypeNsiRefDtoMap : MapAction<NsiElementNsiRefFieldTypeNsiRefDto>
    {
        
        public NsiElementNsiRefFieldTypeNsiRefDtoMap() : 
            base("NsiBase.NsiElementNsiRefFieldTypeNsiRef", id => id.Id)
        {
            Map(map => map.NsiItemRegistryNumber);
            References(r => r.Ref).Cascade.SaveUpdate();
        }
    }

    /// <remarks/>
    //public class NsiElementNsiFieldTypeDtoMap : SubclassMap<NsiElementNsiFieldTypeDto>
    //{

    //    public NsiElementNsiFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementNsiFieldType");
    //        References(r => r.NsiRef);
    //    }
    //}

    /// <remarks/>
    //public class NsiElementNsiFieldTypeNsiRefDtoMap : MapAction<NsiElementNsiFieldTypeNsiRefDto>
    //{

    //    public NsiElementNsiFieldTypeNsiRefDtoMap() : 
    //        base("NsiBase", "NsiElementNsiFieldTypeNsiRef", id => id.Id)
    //    {
    //        Map(map => map.NsiItemRegistryNumber);
    //        Map(map => map.ListGroup);
    //    }
    //}

    /// <remarks/>
    //public class NsiElementEnumFieldTypeDtoMap : SubclassMap<NsiElementEnumFieldTypeDto>
    //{

    //    public NsiElementEnumFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementEnumFieldType");
    //        HasMany(hm => hm.Position).Cascade.All();
    //    }
    //}

    /// <remarks/>
    //public class NsiElementEnumFieldTypePositionDtoMap : MapAction<NsiElementEnumFieldTypePositionDto>
    //{

    //    public NsiElementEnumFieldTypePositionDtoMap() :
    //        base("NsiBase", "NsiElementEnumFieldTypePosition", id => id.Id)
    //    {
    //        Map(map => map.GUID);
    //        Map(map => map.Value);
    //    }
    //}

    /// <remarks/>
    public class NsiElementIntegerFieldTypeDtoMap : SubclassMap<NsiElementIntegerFieldTypeDto>
    {

        public NsiElementIntegerFieldTypeDtoMap()
        {
            Table("NsiBase.NsiElementIntegerFieldType");
            Map(map => map.Value);
        }
    }

    /// <remarks/>
    //public class NsiElementDateFieldTypeDtoMap : SubclassMap<NsiElementDateFieldTypeDto>
    //{

    //    public NsiElementDateFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementDateFieldType");
    //        Map(map => map.Value);
    //    }
    //}

    /// <remarks/>
    //public class NsiElementFloatFieldTypeDtoMap : SubclassMap<NsiElementFloatFieldTypeDto>
    //{

    //    public NsiElementFloatFieldTypeDtoMap()
    //    {
    //        Schema("NsiBase");
    //        Table("NsiElementFloatFieldType");
    //        Map(map => map.Value);
    //    }
    //}

    /// <remarks/>
    public class NsiElementBooleanFieldTypeDtoMap : SubclassMap<NsiElementBooleanFieldTypeDto>
    {
        
        public NsiElementBooleanFieldTypeDtoMap()
        {
            Table("NsiBase.NsiElementBooleanFieldType");
            Map(map => map.Value);
        }
    }

    public class NsiElementStringFieldTypeDtoMap : SubclassMap<NsiElementStringFieldTypeDto>
    {
        public NsiElementStringFieldTypeDtoMap()
        {
            Table("NsiBase.NsiElementStringFieldType");
            Map(map => map.Value).Length(4096);
        }
    }

    /// <remarks/>
    public class NsiElementTypeDtoMap : MapAction<NsiElementTypeDto>
    {
        public NsiElementTypeDtoMap() : 
                base("NsiBase.NsiElementType", id => id.Id)
        {
            Map(map => map.Code);
            Map(map => map.GUID);
            Map(map => map.EndDate);
            Map(map => map.Modified);
            Map(map => map.StartDate);
            Map(map => map.IsActual);
            SetThisColumnKey(HasMany(hm => hm.NsiElementField).Cascade.All());
            SetThisColumnKey(HasMany(hm => hm.ChildElement).Cascade.All());
        }
    }
    
    /// <remarks/>
    public class NsiItemTypeDtoMap : MapAction<NsiItemTypeDto>
    {
        
        public NsiItemTypeDtoMap() : 
                base("NsiBase.NsiItemType", id => id.Id)
        {
            Map(map => map.NsiItemRegistryNumber);
            Map(map => map.Created);
            SetThisColumnKey(HasMany(hm => hm.NsiElement).Cascade.All());
        }
    }
}
